% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/code.R
\name{RPDepth}
\alias{RPDepth}
\title{Regularized Projection Depth}
\usage{
RPDepth(
  mu,
  X,
  alpha = 0,
  beta = 0,
  quant = TRUE,
  operator = NULL,
  ndir = 10000,
  ndir2 = 1000,
  Jmax = 1e+06,
  echo = FALSE
)
}
\arguments{
\item{mu}{A single vector of dimension \code{d}, or a numerical matrix
of dimension \code{m}-times-\code{d} of \code{m} vectors in dimension 
\code{d}. Each row of the matrix corresponds to one point in which
the regularized projection outlyingness/depth should be calclulated.}

\item{X}{A numerical matrix with the dataset of dimension 
\code{n}-times-\code{d}, where \code{n} is the size of the dataset and 
\code{d} is its dimension.}

\item{alpha}{A non-negative (possibly \code{Inf}) number specifying the 
amount of regularization to be applied to the operator part. Always an
absolute value.}

\item{beta}{A non-negative number specifying the amount of regularization 
to be applied in the MAD part. If \code{quant=TRUE}, must be a number 
in the interval \code{[0,1]}. If \code{quant=FALSE}, can be any non-negative 
number. Choice \code{beta=0} in any case means that no regularization is 
applied to the MAD part. By default \code{beta=0}.}

\item{quant}{An indicator of whether the parameter \code{beta} stands for
regularization in terms of quantiles (\code{TRUE}, default), or in terms
of the nominal value of the MAD (\code{FALSE}).}

\item{operator}{The operator specifying the penalization for the operator
part. Must be a list of two components: (i) \code{values}, a numerical vector
of length \code{K} with positive eigenvalues of the operator Gamma, and (ii)
\code{vectors}, a numerical matrix of dimension \code{d}-times-\code{K} whose
columns specify the eigenvectors of Gamma. By default \code{NULL}, which
means that no regularization is applied to the operator part.}

\item{ndir}{A number of randomly chosen directions in the unit sphere to 
approximate the projection depth. By default \code{ndir=1e4}.}

\item{ndir2}{A number of randomly chosen directions in the unit sphere to 
find the threshold for MAD based on \code{beta} if \code{quant=TRUE}. This
parameter is ignored if \code{quant=FALSE}.}

\item{Jmax}{The maximum number of unit directions to be sampled and checked
for whether they satisfy the conditions imposed on the MAD part and the 
operator part. If \code{Jmax} directions are considered but \code{ndir} of 
them do not satisfy both conditions, gives an error. By default, 
\code{Jmax=1e6}.}

\item{echo}{A boolean value that should be used only for diagnostic purposes. If 
\code{echo=TRUE}, as a part of the output also diagnostic messages about the 
process of searching for regularized directions is given. By default
\code{echo=FALSE}.}
}
\value{
A numerical vector \code{res} of approximate (regularized) projection 
outlyingness values. Points with lower values correspond to deeper points in
the sample. Convert to approximate (regularized) depth by transforming
\code{1/(1+res)}.
}
\description{
Computation of the regularized projection depth for multivariate and 
functional data.
}
\examples{
n = 500
X = cbind(rnorm(n),5*rnorm(n))

B = 1.5
evl = 1e2
xg = B*seq(min(X[,1]),max(X[,1]),length=evl)
yg = B*seq(min(X[,2]),max(X[,2]),length=evl)
mu = as.matrix(expand.grid(xg,yg))
m = nrow(mu)

# (non-regularized) projection outlyingness and depth
O = RPDepth(mu, X)
D = matrix(1/(1+O),ncol=evl)

contour(xg, yg, D, col="orange", lwd=2)
points(X, cex=.15, pch=16)

# regularized projection outlyingness and depth
beta = .5
O2 = RPDepth(mu, X, beta)
D2 = matrix(1/(1+O2),ncol=evl)

contour(xg, yg, D2, col="navy", lwd=2, add=TRUE)

# regularized depth: regularization with the operator
# (A) custom operator
operator = list()
operator$values = c(0.01,100)
operator$vectors = cbind(c(1,0),c(1,1))
alpha = 1.5
D = RPDepth(mu, X, alpha = alpha, beta = 0, operator = operator)
D1 = matrix(1/(1+D),ncol=evl)

# (B) variance operator of X
Sigma = var(X)
operator = eigen(Sigma)
alpha = 10
D = RPDepth(mu, X, alpha = alpha, beta = 0, operator = operator)
D2 = matrix(1/(1+D),ncol=evl)

contour(xg, yg, D1, col="orange", lwd=2)
points(X, cex=.15, pch=16)
contour(xg, yg, D2, add=TRUE, col=2, lwd=.5)
}
\seealso{
\link[ddalpha:depth.projection]{depth.projection}
}
