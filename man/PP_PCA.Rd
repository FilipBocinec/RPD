% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/code.R
\name{PP_PCA}
\alias{PP_PCA}
\title{Projection Pursuit Principal Component Analysis}
\usage{
PP_PCA(X, q = NULL, robust = TRUE, eps = 1e-16, vrs = c("C", "R"))
}
\arguments{
\item{X}{A numerical matrix with the dataset of dimension 
\code{n}-times-\code{d}, where \code{n} is the size of the dataset and 
\code{d} is its dimension.}

\item{q}{Number of components to obtain. By default set to \code{d}, the 
dimension of the dataset.}

\item{robust}{An indicator of whether robust estimators of location and scale
should be used (\code{TRUE}, default), or not (\code{FALSE}). If 
\code{robust=TRUE}, location is estimated using the function 
\link[ICSNP:spatial.median]{spatial median} and scale is estimated using
the (unadjusted) median absolute deviation \link{MAD_R}. If 
\code{robust=FALSE}, mean is used for location, and the standard deviation 
for scale.}

\item{eps}{A small constant to check whether a vector is numerically zero or
not. By default \code{1e-16}.}

\item{vrs}{The program is given is two versions: (i) \code{vrs="C"} for the 
fast \code{C++} implementation (default), and (ii) \code{vrs="R"} for the
slower \code{R} version of the code. Up to small numerical errors, both
versions give identical results.}
}
\value{
A list composed of:
\itemize{
 \item{"values"}{ A numerical vector of length \code{q} with the 
 generalized eigenvalues. This output is analogous to the 
 output of function \link[base:eigen]{eigen}.}
 \item{"vectors"}{ A numerical matrix of dimension \code{d}-times-\code{q},
 each column for one generalized eigenvector corresponding to the 
 corresponding entry in \code{values}. This output is analogous to the 
 output of function \link[base:eigen]{eigen}.}
 \item{"PCA"}{ A numerical matrix of dimension \code{n}-times-\code{q} with
 coordinates of the data points from \code{X} in the basis of vectors from
 \code{vectors}.}
 \item{"location"}{ A numerical vector of length \code{d} with the location
 estimator for \code{X}.}
}
}
\description{
The PCA using a projection pursuit algorithm from Croux and 
Ruiz-Gazen (2005).
}
\examples{
n = 500
d = 2
X = cbind(rnorm(n), rnorm(n))

### Situation without contamination

res = PP_PCA(X, robust = FALSE) # non-robust version
resRob = PP_PCA(X) # robust version

plot(X, cex=.4, asp=1)
for(i in 1:d) arrows(res$location[1],res$location[2],
                     res$location[1] + res$vectors[1,i],
                     res$location[2] + res$vectors[2,i],
                     length = 0.1, col="orange", lwd=4)
for(i in 1:d) arrows(resRob$location[1],resRob$location[2],
                     resRob$location[1] + resRob$vectors[1,i],
                     resRob$location[2] + resRob$vectors[2,i],
                     length = 0.1, col="magenta", lwd=4)
legend("bottomleft",c("PCA","robPCA"),col=c("orange","magenta"),lwd=4)

 ### Situation with contamination
 alpha = .1
 m = floor(n*alpha)
 X[1:m,] = cbind(rnorm(m, 5, 1/10), rnorm(m, 5, 1/10))
 
 res = PP_PCA(X, robust = FALSE)
 resRob = PP_PCA(X)
 
 plot(X, cex=.4, asp=1)
for(i in 1:d) arrows(res$location[1],res$location[2],
                     res$location[1] + res$vectors[1,i],
                     res$location[2] + res$vectors[2,i],
                     length = 0.1, col="orange", lwd=4)
for(i in 1:d) arrows(resRob$location[1],resRob$location[2],
                     resRob$location[1] + resRob$vectors[1,i],
                     resRob$location[2] + resRob$vectors[2,i],
                     length = 0.1, col="magenta", lwd=4)
legend("bottomleft",c("PCA","robPCA"),col=c("orange","magenta"),lwd=4)
}
\references{
Christophe Croux and Anne Ruiz-Gazen. (2005). High breakdown estimators for 
principal components: the projection-pursuit approach revisited. 
\emph{Journal of Multivariate Analysis}, 95(1), 206-226.
}
\seealso{
\link[rrcov:PcaProj]{PcaProj}, \link[rrcov:PcaClassic]{PcaClassic}
}
